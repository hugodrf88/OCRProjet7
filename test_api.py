import pytest
from fastapi.testclient import TestClient
from api import app  # Replace `your_app_file` with the actual filename of your FastAPI application
import pandas as pd

@pytest.fixture(scope="module")
def test_client():
    with TestClient(app) as client:
        yield client


def test_prediction_endpoint(test_client):
    # Prepare the request payload
    request_payload = {"NAME_CONTRACT_TYPE": "Cash loans",
"CODE_GENDER": "F",
"FLAG_OWN_CAR": "N",
"FLAG_OWN_REALTY": "Y",
"CNT_CHILDREN": 0.0,
"AMT_INCOME_TOTAL": 149850.0,
"AMT_CREDIT": 513531.0,
"AMT_ANNUITY": 24822.0,
"AMT_GOODS_PRICE": 450000.0,
"NAME_TYPE_SUITE": "Unaccompanied",
"NAME_INCOME_TYPE": "Working",
"NAME_EDUCATION_TYPE": "Secondary / secondary special",
"NAME_FAMILY_STATUS": "Married",
"NAME_HOUSING_TYPE": "House / apartment",
"REGION_POPULATION_RELATIVE": 0.01885,
"DAYS_BIRTH": -15748.0,
"DAYS_EMPLOYED": -1215.0,
"DAYS_REGISTRATION": -4505.0,
"DAYS_ID_PUBLISH": -3273.0,
"OWN_CAR_AGE": 9.0,
"FLAG_MOBIL": 1.0,
"FLAG_EMP_PHONE": 1.0,
"FLAG_WORK_PHONE": 0.0,
"FLAG_CONT_MOBILE": 1.0,
"FLAG_PHONE": 0.0,
"FLAG_EMAIL": 0.0,
"OCCUPATION_TYPE": "Laborers",
"CNT_FAM_MEMBERS": 2.0,
"REGION_RATING_CLIENT": 2.0,
"REGION_RATING_CLIENT_W_CITY": 2.0,
"WEEKDAY_APPR_PROCESS_START": "TUESDAY",
"HOUR_APPR_PROCESS_START": 12.0,
"REG_REGION_NOT_LIVE_REGION": 0.0,
"REG_REGION_NOT_WORK_REGION": 0.0,
"LIVE_REGION_NOT_WORK_REGION": 0.0,
"REG_CITY_NOT_LIVE_CITY": 0.0,
"REG_CITY_NOT_WORK_CITY": 0.0,
"LIVE_CITY_NOT_WORK_CITY": 0.0,
"ORGANIZATION_TYPE": "Business Entity Type 3",
"EXT_SOURCE_1": 0.5053284235011328,
"EXT_SOURCE_2": 0.5671589391298664,
"EXT_SOURCE_3": 0.5352762504724826,
"APARTMENTS_AVG": 0.0866,
"BASEMENTAREA_AVG": 0.0761,
"YEARS_BEGINEXPLUATATION_AVG": 0.9816,
"YEARS_BUILD_AVG": 0.7552,
"COMMONAREA_AVG": 0.0216,
"ELEVATORS_AVG": 0.0,
"ENTRANCES_AVG": 0.1379,
"FLOORSMAX_AVG": 0.1667,
"FLOORSMIN_AVG": 0.2083,
"LANDAREA_AVG": 0.0485,
"LIVINGAPARTMENTS_AVG": 0.0756,
"LIVINGAREA_AVG": 0.0736,
"NONLIVINGAPARTMENTS_AVG": 0.0,
"NONLIVINGAREA_AVG": 0.0037,
"APARTMENTS_MODE": 0.084,
"BASEMENTAREA_MODE": 0.0745,
"YEARS_BEGINEXPLUATATION_MODE": 0.9816,
"YEARS_BUILD_MODE": 0.7648,
"COMMONAREA_MODE": 0.0195,
"ELEVATORS_MODE": 0.0,
"ENTRANCES_MODE": 0.1379,
"FLOORSMAX_MODE": 0.1667,
"FLOORSMIN_MODE": 0.2083,
"LANDAREA_MODE": 0.0463,
"LIVINGAPARTMENTS_MODE": 0.0762,
"LIVINGAREA_MODE": 0.073,
"NONLIVINGAPARTMENTS_MODE": 0.0,
"NONLIVINGAREA_MODE": 0.0013,
"APARTMENTS_MEDI": 0.0848,
"BASEMENTAREA_MEDI": 0.0757,
"YEARS_BEGINEXPLUATATION_MEDI": 0.9816,
"YEARS_BUILD_MEDI": 0.7585,
"COMMONAREA_MEDI": 0.0213,
"ELEVATORS_MEDI": 0.0,
"ENTRANCES_MEDI": 0.1379,
"FLOORSMAX_MEDI": 0.1667,
"FLOORSMIN_MEDI": 0.2083,
"LANDAREA_MEDI": 0.049,
"LIVINGAPARTMENTS_MEDI": 0.0761,
"LIVINGAREA_MEDI": 0.0742,
"NONLIVINGAPARTMENTS_MEDI": 0.0,
"NONLIVINGAREA_MEDI": 0.0033,
"FONDKAPREMONT_MODE": "reg oper account",
"HOUSETYPE_MODE": "block of flats",
"TOTALAREA_MODE": 0.0686,
"WALLSMATERIAL_MODE": "Panel",
"EMERGENCYSTATE_MODE": "No",
"OBS_30_CNT_SOCIAL_CIRCLE": 0.0,
"DEF_30_CNT_SOCIAL_CIRCLE": 0.0,
"OBS_60_CNT_SOCIAL_CIRCLE": 0.0,
"DEF_60_CNT_SOCIAL_CIRCLE": 0.0,
"DAYS_LAST_PHONE_CHANGE": -759.0,
"FLAG_DOCUMENT_2": 0.0,
"FLAG_DOCUMENT_3": 1.0,
"FLAG_DOCUMENT_4": 0.0,
"FLAG_DOCUMENT_5": 0.0,
"FLAG_DOCUMENT_6": 0.0,
"FLAG_DOCUMENT_7": 0.0,
"FLAG_DOCUMENT_8": 0.0,
"FLAG_DOCUMENT_9": 0.0,
"FLAG_DOCUMENT_10": 0.0,
"FLAG_DOCUMENT_11": 0.0,
"FLAG_DOCUMENT_12": 0.0,
"FLAG_DOCUMENT_13": 0.0,
"FLAG_DOCUMENT_14": 0.0,
"FLAG_DOCUMENT_15": 0.0,
"FLAG_DOCUMENT_16": 0.0,
"FLAG_DOCUMENT_17": 0.0,
"FLAG_DOCUMENT_18": 0.0,
"FLAG_DOCUMENT_19": 0.0,
"FLAG_DOCUMENT_20": 0.0,
"FLAG_DOCUMENT_21": 0.0,
"AMT_REQ_CREDIT_BUREAU_HOUR": 0.0,
"AMT_REQ_CREDIT_BUREAU_DAY": 0.0,
"AMT_REQ_CREDIT_BUREAU_WEEK": 0.0,
"AMT_REQ_CREDIT_BUREAU_MON": 0.0,
"AMT_REQ_CREDIT_BUREAU_QRT": 0.0,
"AMT_REQ_CREDIT_BUREAU_YEAR": 1.0,}

    # Send a POST request to the prediction endpoint
    response = test_client.post("/prediction", json=request_payload)

    # Assert the response status code
    assert response.status_code == 200

    # Assert the response content
    response_json = response.json()
    assert "prediction" in response_json
    assert isinstance(response_json["prediction"], float)


if __name__ == "__main__":
    pytest.main()
